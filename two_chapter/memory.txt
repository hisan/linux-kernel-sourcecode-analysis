1.磁盘中的页面，我们主要针对它的内容，我们关心写入写出其页面(中的内容)
G而内存，主要是用来用的。

2.vmalloc()在系统空间中启动，从内核空间中分配，由vmalloc()分配的空间不会被kswapd换出，
	因为kswapd只扫描各个进程的用户空间，而根本就看不到通过vmalloc分配的页面表项。


3.由这些数据结构中的构建函数和析构函数而得的对cpp类中的构建和析构函数的理解：
	c++中类是有构建和析构函数的，如本书的描述，构建是为了构建专用的缓冲区队列，析构是因为对次专用的缓冲区队列的释放有特殊的步骤。
	而析构为NULL是说明释放这个专用数据结构无需对各个缓冲区进行特殊的处理。可能这和CPP中的析构函数有时只是简单写为"~类名()"这样，因为这只是简单地释放函数，
	而如若对类中的动态分配的数据结构有特殊的处理，则要自己实现自己的析构函数。

	

	
	
	
	

	
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
